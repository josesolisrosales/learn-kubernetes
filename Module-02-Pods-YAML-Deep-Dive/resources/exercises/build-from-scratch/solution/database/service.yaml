# Database Services - E-commerce Platform
# Services for PostgreSQL database access and monitoring

---
# Main database service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: database-service
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: database
    tier: data
  annotations:
    service.kubernetes.io/description: "PostgreSQL database service for application access"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: ecommerce-platform
    component: database
    tier: data
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  - name: pgbouncer
    port: 6432
    targetPort: 6432
    protocol: TCP
  - name: metrics
    port: 9187
    targetPort: 9187
    protocol: TCP
  sessionAffinity: None

---
# Headless service for StatefulSet (required for StatefulSet)
apiVersion: v1
kind: Service
metadata:
  name: database-headless
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: database
    tier: data
    service-type: headless
  annotations:
    service.kubernetes.io/description: "Headless service for StatefulSet database pods"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: ecommerce-platform
    component: database
    tier: data
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  - name: pgbouncer
    port: 6432
    targetPort: 6432
    protocol: TCP

---
# Read-only service for read replicas (future use)
apiVersion: v1
kind: Service
metadata:
  name: database-readonly
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: database
    tier: data
    access-type: readonly
  annotations:
    service.kubernetes.io/description: "Read-only access to database (for future read replicas)"
spec:
  type: ClusterIP
  selector:
    app: ecommerce-platform
    component: database
    tier: data
    # In a real setup, this would select read replica pods
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  sessionAffinity: None

---
# NodePort service for development access
apiVersion: v1
kind: Service
metadata:
  name: database-nodeport
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: database
    tier: data
    exposure: nodeport
  annotations:
    service.kubernetes.io/description: "NodePort service for development database access"
spec:
  type: NodePort
  selector:
    app: ecommerce-platform
    component: database
    tier: data
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    nodePort: 30432
    protocol: TCP
  sessionAffinity: None