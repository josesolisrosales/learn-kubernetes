# Backend API Secrets - E-commerce Platform
# Contains sensitive configuration data

---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: backend
    tier: business-logic
  annotations:
    kubernetes.io/description: "Sensitive configuration for backend API service"
type: Opaque
data:
  # Database connection string (base64 encoded)
  # Original: postgresql://api_user:secure_password_123@database-service:5432/ecommerce_db?sslmode=require
  database-url: cG9zdGdyZXNxbDovL2FwaV91c2VyOnNlY3VyZV9wYXNzd29yZF8xMjNAZGF0YWJhc2Utc2VydmljZTo1NDMyL2Vjb21tZXJjZV9kYj9zc2xtb2RlPXJlcXVpcmU=
  
  # API key for external services (base64 encoded)
  # Original: sk-1234567890abcdef-api-key-for-external-services
  api-key: c2stMTIzNDU2Nzg5MGFiY2RlZi1hcGkta2V5LWZvci1leHRlcm5hbC1zZXJ2aWNlcw==
  
  # JWT secret for token signing (base64 encoded)
  # Original: super-secret-jwt-signing-key-do-not-share-in-production
  jwt-secret: c3VwZXItc2VjcmV0LWp3dC1zaWduaW5nLWtleS1kby1ub3Qtc2hhcmUtaW4tcHJvZHVjdGlvbg==
  
  # Redis password (base64 encoded)
  # Original: redis_cache_password_456
  redis-password: cmVkaXNfY2FjaGVfcGFzc3dvcmRfNDU2
  
  # Encryption key for sensitive data (base64 encoded)
  # Original: encryption-key-for-pii-data-32-chars
  encryption-key: ZW5jcnlwdGlvbi1rZXktZm9yLXBpaS1kYXRhLTMyLWNoYXJz
  
  # Third-party service credentials (base64 encoded)
  # Original: {"payment_gateway": {"api_key": "pk_test_123", "secret": "sk_test_456"}, "email_service": {"api_key": "sg_api_key_789"}}
  external-services: eyJwYXltZW50X2dhdGV3YXkiOiB7ImFwaV9rZXkiOiAicGtfdGVzdF8xMjMiLCAic2VjcmV0IjogInNrX3Rlc3RfNDU2In0sICJlbWFpbF9zZXJ2aWNlIjogeyJhcGlfa2V5IjogInNnX2FwaV9rZXlfNzg5In19

---
# TLS certificates for HTTPS (self-signed for demo)
apiVersion: v1
kind: Secret
metadata:
  name: backend-tls
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: backend
    tier: business-logic
    cert-type: tls
  annotations:
    kubernetes.io/description: "TLS certificate for backend API HTTPS"
type: kubernetes.io/tls
data:
  # Self-signed certificate (base64 encoded)
  # Generated with: openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/CN=backend-api-service"
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVSjVXTkZxbEsrVGp5TG1kVXJ4c1p0dXNaVlNNd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TkRBeE1UVXhNalV5TURCYUZ3MHlOVEF4Ck1UUXhNalV5TURCYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRRENxTHY5...
  
  # Private key (base64 encoded)
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRENxTHY5...

---
# Database credentials for connection
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: ecommerce-platform
  labels:
    app: ecommerce-platform
    component: database
    tier: data
  annotations:
    kubernetes.io/description: "Database credentials for backend API connection"
type: Opaque
data:
  # Database username (base64 encoded)
  # Original: api_user
  username: YXBpX3VzZXI=
  
  # Database password (base64 encoded)  
  # Original: secure_password_123
  password: c2VjdXJlX3Bhc3N3b3JkXzEyMw==
  
  # Database name (base64 encoded)
  # Original: ecommerce_db
  database: ZWNvbW1lcmNlX2Ri
  
  # Database host (base64 encoded)
  # Original: database-service
  host: ZGF0YWJhc2Utc2VydmljZQ==
  
  # Database port (base64 encoded)
  # Original: 5432
  port: NTQzMg==